<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
            <button class="page-link" href="javascript:;" @onclick="(() => ChangePage(1))">首页</button>
        </li>
        <li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
            <button class="page-link"  @onclick="()=>ChangePage(CurrentPage-1)">上一页</button>
        </li>
        @for (int i = StartPage; i <=EndPage; i++)
        {
            var pageSize = i;
            <li class="page-item @(CurrentPage==i  ? "active" : "")">
                <button class="page-link" href="javascript:;" @onclick="(() => ChangePage(pageSize))">@i</button>
            </li>
        }
        <li class="page-item @(CurrentPage == TotalPages ? "disabled" : "")">
            <button class="page-link"  @onclick="()=>ChangePage(CurrentPage+1)">下一页</button>
        </li>
        <li class="page-item @(CurrentPage == TotalPages ? "disabled" : "")">
            <button class="page-link" href="javascript:;" @onclick="(() => ChangePage(TotalPages))">尾页</button>
        </li>
    </ul>
</nav>

@code {
    [Parameter]
    public int TotalCount { get; set; }

    [Parameter]
    public int CurrentPage { get; set; } = 1;

    [Parameter]
    public int PageSize { get; set; } = 10;

    public int TotalPages => (int)Math.Ceiling(TotalCount / (double)PageSize);
    public int StartPage => Math.Max(1, CurrentPage - 5);
    public int EndPage => Math.Min(TotalPages, CurrentPage + 5);

    [Parameter]
    public EventCallback<int> PageChanged { get; set; }

    private async Task ChangePage(int page)
    {
        if (page > 0 && page <= TotalPages)
        {
            CurrentPage = page;
            await PageChanged.InvokeAsync(page);
        }
    }
}
